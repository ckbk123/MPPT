;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 21/01/2022 16:58:24
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EFD8  	GOTO        432
_interrupt:
;211105_Commande_MPPT_v2.c,291 :: 		void interrupt() {
;211105_Commande_MPPT_v2.c,294 :: 		INTCON &= ~BIT2;
0x0008	0x94F2      	BCF         INTCON, 2 
;211105_Commande_MPPT_v2.c,296 :: 		T0CON &= ~BIT7;
0x000A	0x0E7F      	MOVLW       127
0x000C	0x16D5      	ANDWF       T0CON, 1 
;211105_Commande_MPPT_v2.c,298 :: 		settled = 1;            // indicate that a measurement is done
0x000E	0x0E01      	MOVLW       1
0x0010	0x6E57      	MOVWF       _settled 
;211105_Commande_MPPT_v2.c,299 :: 		}
L__interrupt99:
0x0012	0x0011      	RETFIE      1
; end of _interrupt
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x0014	0x0E0E      	MOVLW       14
0x0016	0x6E0D      	MOVWF       R13, 0
L_Delay_22us1:
0x0018	0x2E0D      	DECFSZ      R13, 1, 0
0x001A	0xD7FE      	BRA         L_Delay_22us1
0x001C	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
0x001E	0x0012      	RETURN      0
; end of _Delay_22us
_PWM1_Start:
;__Lib_PWM_b3.c,22 :: 		
;__Lib_PWM_b3.c,23 :: 		
0x0020	0x9693      	BCF         TRISB3_bit, 3 
;__Lib_PWM_b3.c,24 :: 		
0x0022	0x84CA      	BSF         T2CON, 2 
;__Lib_PWM_b3.c,25 :: 		
0x0024	0x0E0C      	MOVLW       12
0x0026	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_b3.c,26 :: 		
0x0028	0x0012      	RETURN      0
; end of _PWM1_Start
_PWM1_Init:
;__Lib_PWM_b3.c,4 :: 		
;__Lib_PWM_b3.c,5 :: 		
;__Lib_PWM_b3.c,6 :: 		
0x002A	0x6ABE      	CLRF        CCPR1L 
;__Lib_PWM_b3.c,7 :: 		
0x002C	0x98BD      	BCF         CCP1CON, 4 
;__Lib_PWM_b3.c,8 :: 		
0x002E	0x9ABD      	BCF         CCP1CON, 5 
;__Lib_PWM_b3.c,9 :: 		
0x0030	0x0012      	RETURN      0
; end of _PWM1_Init
_Mul_16x16_U:
;__Lib_Math.c,437 :: 		
;__Lib_Math.c,444 :: 		
0x0032	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,445 :: 		
0x0034	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,446 :: 		
0x0036	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,447 :: 		
0x0038	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,448 :: 		
0x003A	0x0204      	MULWF       R4, 0
;__Lib_Math.c,450 :: 		
0x003C	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,451 :: 		
0x0040	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,452 :: 		
0x0044	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,453 :: 		
0x0046	0x0205      	MULWF       R5, 0
;__Lib_Math.c,455 :: 		
0x0048	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,456 :: 		
0x004C	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,457 :: 		
0x0050	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,458 :: 		
0x0052	0x0205      	MULWF       R5, 0
;__Lib_Math.c,460 :: 		
0x0054	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,461 :: 		
0x0056	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,462 :: 		
0x0058	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,463 :: 		
0x005A	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,464 :: 		
0x005C	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,465 :: 		
0x005E	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,466 :: 		
0x0060	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,467 :: 		
0x0062	0x0204      	MULWF       R4, 0
;__Lib_Math.c,469 :: 		
0x0064	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,470 :: 		
0x0066	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,471 :: 		
0x0068	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,472 :: 		
0x006A	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,473 :: 		
0x006C	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,474 :: 		
0x006E	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,476 :: 		
0x0070	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,477 :: 		
0x0074	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,478 :: 		
0x0078	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,479 :: 		
0x007C	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,482 :: 		
0x0080	0x0012      	RETURN      0
; end of _Mul_16x16_U
_ADC_Read:
;__Lib_ADC_A_D.c,2 :: 		
;__Lib_ADC_A_D.c,5 :: 		
0x0082	0x6AC2      	CLRF        ADCON0 
;__Lib_ADC_A_D.c,6 :: 		
0x0084	0x0E07      	MOVLW       7
0x0086	0x12C0      	IORWF       ADCON2, 1 
;__Lib_ADC_A_D.c,7 :: 		
0x0088	0x8EC0      	BSF         ADCON2, 7 
;__Lib_ADC_A_D.c,8 :: 		
0x008A	0xF000C05B  	MOVFF       FARG_ADC_Read_channel, R0
0x008E	0x3600      	RLCF        R0, 1 
0x0090	0x9000      	BCF         R0, 0 
0x0092	0x3600      	RLCF        R0, 1 
0x0094	0x9000      	BCF         R0, 0 
0x0096	0x5000      	MOVF        R0, 0 
0x0098	0x12C2      	IORWF       ADCON0, 1 
;__Lib_ADC_A_D.c,9 :: 		
0x009A	0x80C2      	BSF         ADCON0, 0 
;__Lib_ADC_A_D.c,10 :: 		
0x009C	0xDFBB      	RCALL       _Delay_22us
;__Lib_ADC_A_D.c,11 :: 		
0x009E	0x82C2      	BSF         ADCON0, 1 
;__Lib_ADC_A_D.c,12 :: 		
L_ADC_Read0:
0x00A0	0xA2C2      	BTFSS       ADCON0, 1 
0x00A2	0xD001      	BRA         L_ADC_Read1
0x00A4	0xD7FD      	BRA         L_ADC_Read0
L_ADC_Read1:
;__Lib_ADC_A_D.c,13 :: 		
0x00A6	0xF001CFC4  	MOVFF       ADRESH, R1
0x00AA	0x6A00      	CLRF        R0 
;__Lib_ADC_A_D.c,14 :: 		
0x00AC	0x50C3      	MOVF        ADRESL, 0 
0x00AE	0x1200      	IORWF       R0, 1 
0x00B0	0x0E00      	MOVLW       0
0x00B2	0x1201      	IORWF       R1, 1 
;__Lib_ADC_A_D.c,15 :: 		
0x00B4	0x90C2      	BCF         ADCON0, 0 
;__Lib_ADC_A_D.c,17 :: 		
;__Lib_ADC_A_D.c,18 :: 		
0x00B6	0x0012      	RETURN      0
; end of _ADC_Read
_init:
;211105_Commande_MPPT_v2.c,302 :: 		void init() {
;211105_Commande_MPPT_v2.c,308 :: 		OSCCON = 0x72;
0x00B8	0x0E72      	MOVLW       114
0x00BA	0x6ED3      	MOVWF       OSCCON 
;211105_Commande_MPPT_v2.c,317 :: 		T0CON  = 0xC6;
0x00BC	0x0EC6      	MOVLW       198
0x00BE	0x6ED5      	MOVWF       T0CON 
;211105_Commande_MPPT_v2.c,321 :: 		TRISA = 0xFF;
0x00C0	0x0EFF      	MOVLW       255
0x00C2	0x6E92      	MOVWF       TRISA 
;211105_Commande_MPPT_v2.c,322 :: 		PORTA = PORTA | 0x07;
0x00C4	0x0E07      	MOVLW       7
0x00C6	0x1280      	IORWF       PORTA, 1 
;211105_Commande_MPPT_v2.c,326 :: 		TRISB = TRISB & 0b11111000; // RB0, RB1 and RB2 as OUTPUT
0x00C8	0x0EF8      	MOVLW       248
0x00CA	0x1693      	ANDWF       TRISB, 1 
;211105_Commande_MPPT_v2.c,327 :: 		PORTB = PORTB & 0b11111000; // tie them down to 0
0x00CC	0x0EF8      	MOVLW       248
0x00CE	0x1681      	ANDWF       PORTB, 1 
;211105_Commande_MPPT_v2.c,330 :: 		INTCON = (BIT7 + BIT5);
0x00D0	0x0EA0      	MOVLW       160
0x00D2	0x6EF2      	MOVWF       INTCON 
;211105_Commande_MPPT_v2.c,337 :: 		PWM1_Init(10000);         // set PWM to 10kHz, but the REAL PWM is 100kHz
0x00D4	0x90CA      	BCF         T2CON, 0, 0
0x00D6	0x92CA      	BCF         T2CON, 1, 0
0x00D8	0x0EC7      	MOVLW       199
0x00DA	0x6ECB      	MOVWF       PR2, 0
0x00DC	0xDFA6      	RCALL       _PWM1_Init
;211105_Commande_MPPT_v2.c,338 :: 		PWM1_Start();             // start PWM
0x00DE	0xDFA0      	RCALL       _PWM1_Start
;211105_Commande_MPPT_v2.c,340 :: 		}
0x00E0	0x0012      	RETURN      0
; end of _init
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x00E2	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x00E4	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x00E8	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x00EA	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x00EC	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x00EE	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
0x00F0	0x0012      	RETURN      0
; end of ___CC2DW
_PWM1_Set_Duty:
;__Lib_PWM_b3.c,11 :: 		
;__Lib_PWM_b3.c,15 :: 		
0x00F2	0x50CB      	MOVF        PR2, 0 
0x00F4	0x0F01      	ADDLW       1
0x00F6	0x6E00      	MOVWF       R0 
0x00F8	0x6A01      	CLRF        R1 
0x00FA	0x0E00      	MOVLW       0
0x00FC	0x2201      	ADDWFC      R1, 1 
0x00FE	0xF004C05B  	MOVFF       FARG_PWM1_Set_Duty_new_duty, R4
0x0102	0x0E00      	MOVLW       0
0x0104	0x6E05      	MOVWF       R5 
0x0106	0xDF95      	RCALL       _Mul_16x16_U
0x0108	0x0E06      	MOVLW       6
0x010A	0x6E02      	MOVWF       R2 
0x010C	0xF004C000  	MOVFF       R0, R4
0x0110	0xF005C001  	MOVFF       R1, R5
0x0114	0x5002      	MOVF        R2, 0 
L__PWM1_Set_Duty0:
0x0116	0xE005      	BZ          L__PWM1_Set_Duty1
0x0118	0x3205      	RRCF        R5, 1 
0x011A	0x3204      	RRCF        R4, 1 
0x011C	0x9E05      	BCF         R5, 7 
0x011E	0x0FFF      	ADDLW       255
0x0120	0xD7FA      	BRA         L__PWM1_Set_Duty0
L__PWM1_Set_Duty1:
;__Lib_PWM_b3.c,16 :: 		
0x0122	0x0E04      	MOVLW       4
0x0124	0x6E01      	MOVWF       R1 
0x0126	0xF000C004  	MOVFF       R4, R0
0x012A	0x5001      	MOVF        R1, 0 
L__PWM1_Set_Duty2:
0x012C	0xE004      	BZ          L__PWM1_Set_Duty3
0x012E	0x3600      	RLCF        R0, 1 
0x0130	0x9000      	BCF         R0, 0 
0x0132	0x0FFF      	ADDLW       255
0x0134	0xD7FB      	BRA         L__PWM1_Set_Duty2
L__PWM1_Set_Duty3:
0x0136	0x0E30      	MOVLW       48
0x0138	0x1400      	ANDWF       R0, 0 
0x013A	0x6E03      	MOVWF       R3 
;__Lib_PWM_b3.c,17 :: 		
0x013C	0xF000C004  	MOVFF       R4, R0
0x0140	0xF001C005  	MOVFF       R5, R1
0x0144	0x3201      	RRCF        R1, 1 
0x0146	0x3200      	RRCF        R0, 1 
0x0148	0x9E01      	BCF         R1, 7 
0x014A	0x3201      	RRCF        R1, 1 
0x014C	0x3200      	RRCF        R0, 1 
0x014E	0x9E01      	BCF         R1, 7 
0x0150	0xFFBEC000  	MOVFF       R0, CCPR1L
;__Lib_PWM_b3.c,18 :: 		
0x0154	0x0E0F      	MOVLW       15
0x0156	0x16BD      	ANDWF       CCP1CON, 1 
;__Lib_PWM_b3.c,19 :: 		
0x0158	0x5003      	MOVF        R3, 0 
0x015A	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_b3.c,20 :: 		
0x015C	0x0012      	RETURN      0
; end of _PWM1_Set_Duty
_Mul_32x32_U:
;__Lib_Math.c,1613 :: 		
;__Lib_Math.c,1628 :: 		
0x015E	0x0E22      	MOVLW       34
;__Lib_Math.c,1629 :: 		
0x0160	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1630 :: 		
0x0162	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,1631 :: 		
0x0164	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,1632 :: 		
0x0166	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,1633 :: 		
0x0168	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,1635 :: 		
_NEXT:
;__Lib_Math.c,1639 :: 		
0x016A	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1640 :: 		
0x016C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1641 :: 		
0x016E	0xD01F      	BRA         _EXIT2
;__Lib_Math.c,1642 :: 		
0x0170	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,1644 :: 		
_LOOP:
;__Lib_Math.c,1653 :: 		
0x0172	0x320B      	RRCF        R11, 1, 0
;__Lib_Math.c,1654 :: 		
0x0174	0x320A      	RRCF        R10, 1, 0
;__Lib_Math.c,1655 :: 		
0x0176	0x3209      	RRCF        R9, 1, 0
;__Lib_Math.c,1656 :: 		
0x0178	0x3208      	RRCF        R8, 1, 0
;__Lib_Math.c,1657 :: 		
0x017A	0x3203      	RRCF        R3, 1, 0
;__Lib_Math.c,1658 :: 		
0x017C	0x3202      	RRCF        R2, 1, 0
;__Lib_Math.c,1659 :: 		
0x017E	0x3201      	RRCF        R1, 1, 0
;__Lib_Math.c,1660 :: 		
0x0180	0x3200      	RRCF        R0, 1, 0
;__Lib_Math.c,1665 :: 		
0x0182	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1666 :: 		
0x0184	0xD7F2      	BRA         _NEXT
;__Lib_Math.c,1667 :: 		
0x0186	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1668 :: 		
0x0188	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1669 :: 		
0x018A	0xD009      	BRA         _EXIT1
;__Lib_Math.c,1676 :: 		
0x018C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1677 :: 		
0x018E	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1678 :: 		
0x0190	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1681 :: 		
0x0192	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1682 :: 		
0x0194	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1685 :: 		
0x0196	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1686 :: 		
0x0198	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1689 :: 		
0x019A	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1691 :: 		
0x019C	0xD7EA      	BRA         _LOOP
;__Lib_Math.c,1693 :: 		
_EXIT1:
;__Lib_Math.c,1698 :: 		
0x019E	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1699 :: 		
0x01A0	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1700 :: 		
0x01A2	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1703 :: 		
0x01A4	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1704 :: 		
0x01A6	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1707 :: 		
0x01A8	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1708 :: 		
0x01AA	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1711 :: 		
0x01AC	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1714 :: 		
_EXIT2:
;__Lib_Math.c,1716 :: 		
0x01AE	0x0012      	RETURN      0
; end of _Mul_32x32_U
_main:
0x01B0	0xF004EC0B  	CALL        2070, 0
;211105_Commande_MPPT_v2.c,136 :: 		void main() {
;211105_Commande_MPPT_v2.c,138 :: 		init();
0x01B4	0xDF81      	RCALL       _init
;211105_Commande_MPPT_v2.c,140 :: 		while(1) {
L_main0:
;211105_Commande_MPPT_v2.c,142 :: 		if (settled) {
0x01B6	0x5257      	MOVF        _settled, 1 
0x01B8	0xB4D8      	BTFSC       STATUS, 2 
0x01BA	0xD307      	BRA         L_main2
;211105_Commande_MPPT_v2.c,145 :: 		for (counter = 0; counter < 4; ++counter) {
0x01BC	0x6A58      	CLRF        _counter 
L_main3:
0x01BE	0x0E04      	MOVLW       4
0x01C0	0x5C58      	SUBWF       _counter, 0 
0x01C2	0xE20F      	BC          L_main4
;211105_Commande_MPPT_v2.c,146 :: 		voltage_in += ADC_Read(0);
0x01C4	0x6A5B      	CLRF        FARG_ADC_Read_channel 
0x01C6	0xDF5D      	RCALL       _ADC_Read
0x01C8	0x5000      	MOVF        R0, 0 
0x01CA	0x2659      	ADDWF       _voltage_in, 1 
0x01CC	0x5001      	MOVF        R1, 0 
0x01CE	0x225A      	ADDWFC      _voltage_in+1, 1 
;211105_Commande_MPPT_v2.c,147 :: 		voltage_out += ADC_Read(2);
0x01D0	0x0E02      	MOVLW       2
0x01D2	0x6E5B      	MOVWF       FARG_ADC_Read_channel 
0x01D4	0xDF56      	RCALL       _ADC_Read
0x01D6	0x5000      	MOVF        R0, 0 
0x01D8	0x2655      	ADDWF       _voltage_out, 1 
0x01DA	0x5001      	MOVF        R1, 0 
0x01DC	0x2256      	ADDWFC      _voltage_out+1, 1 
;211105_Commande_MPPT_v2.c,145 :: 		for (counter = 0; counter < 4; ++counter) {
0x01DE	0x2A58      	INCF        _counter, 1 
;211105_Commande_MPPT_v2.c,148 :: 		}
0x01E0	0xD7EE      	BRA         L_main3
L_main4:
;211105_Commande_MPPT_v2.c,150 :: 		voltage_in >>= 2;
0x01E2	0x325A      	RRCF        _voltage_in+1, 1 
0x01E4	0x3259      	RRCF        _voltage_in, 1 
0x01E6	0x9E5A      	BCF         _voltage_in+1, 7 
0x01E8	0xBC5A      	BTFSC       _voltage_in+1, 6 
0x01EA	0x8E5A      	BSF         _voltage_in+1, 7 
0x01EC	0x325A      	RRCF        _voltage_in+1, 1 
0x01EE	0x3259      	RRCF        _voltage_in, 1 
0x01F0	0x9E5A      	BCF         _voltage_in+1, 7 
0x01F2	0xBC5A      	BTFSC       _voltage_in+1, 6 
0x01F4	0x8E5A      	BSF         _voltage_in+1, 7 
;211105_Commande_MPPT_v2.c,151 :: 		voltage_out >>= 2;
0x01F6	0x3256      	RRCF        _voltage_out+1, 1 
0x01F8	0x3255      	RRCF        _voltage_out, 1 
0x01FA	0x9E56      	BCF         _voltage_out+1, 7 
0x01FC	0xBC56      	BTFSC       _voltage_out+1, 6 
0x01FE	0x8E56      	BSF         _voltage_out+1, 7 
0x0200	0x3256      	RRCF        _voltage_out+1, 1 
0x0202	0x3255      	RRCF        _voltage_out, 1 
0x0204	0x9E56      	BCF         _voltage_out+1, 7 
0x0206	0xBC56      	BTFSC       _voltage_out+1, 6 
0x0208	0x8E56      	BSF         _voltage_out+1, 7 
;211105_Commande_MPPT_v2.c,154 :: 		for (counter = 0; counter < 8; ++counter) {
0x020A	0x6A58      	CLRF        _counter 
L_main6:
0x020C	0x0E08      	MOVLW       8
0x020E	0x5C58      	SUBWF       _counter, 0 
0x0210	0xE209      	BC          L_main7
;211105_Commande_MPPT_v2.c,155 :: 		current_in += ADC_Read(1);
0x0212	0x0E01      	MOVLW       1
0x0214	0x6E5B      	MOVWF       FARG_ADC_Read_channel 
0x0216	0xDF35      	RCALL       _ADC_Read
0x0218	0x5000      	MOVF        R0, 0 
0x021A	0x262F      	ADDWF       _current_in, 1 
0x021C	0x5001      	MOVF        R1, 0 
0x021E	0x2230      	ADDWFC      _current_in+1, 1 
;211105_Commande_MPPT_v2.c,154 :: 		for (counter = 0; counter < 8; ++counter) {
0x0220	0x2A58      	INCF        _counter, 1 
;211105_Commande_MPPT_v2.c,156 :: 		}
0x0222	0xD7F4      	BRA         L_main6
L_main7:
;211105_Commande_MPPT_v2.c,158 :: 		current_in >>= 3;
0x0224	0x0E03      	MOVLW       3
0x0226	0x6E00      	MOVWF       R0 
0x0228	0xF008C02F  	MOVFF       _current_in, R8
0x022C	0xF009C030  	MOVFF       _current_in+1, R9
0x0230	0x5000      	MOVF        R0, 0 
L__main72:
0x0232	0xE007      	BZ          L__main73
0x0234	0x3209      	RRCF        R9, 1 
0x0236	0x3208      	RRCF        R8, 1 
0x0238	0x9E09      	BCF         R9, 7 
0x023A	0xBC09      	BTFSC       R9, 6 
0x023C	0x8E09      	BSF         R9, 7 
0x023E	0x0FFF      	ADDLW       255
0x0240	0xD7F8      	BRA         L__main72
L__main73:
0x0242	0xF02FC008  	MOVFF       R8, _current_in
0x0246	0xF030C009  	MOVFF       R9, _current_in+1
;211105_Commande_MPPT_v2.c,161 :: 		voltage_out >>= 2;
0x024A	0x3256      	RRCF        _voltage_out+1, 1 
0x024C	0x3255      	RRCF        _voltage_out, 1 
0x024E	0x9E56      	BCF         _voltage_out+1, 7 
0x0250	0xBC56      	BTFSC       _voltage_out+1, 6 
0x0252	0x8E56      	BSF         _voltage_out+1, 7 
0x0254	0x3256      	RRCF        _voltage_out+1, 1 
0x0256	0x3255      	RRCF        _voltage_out, 1 
0x0258	0x9E56      	BCF         _voltage_out+1, 7 
0x025A	0xBC56      	BTFSC       _voltage_out+1, 6 
0x025C	0x8E56      	BSF         _voltage_out+1, 7 
;211105_Commande_MPPT_v2.c,164 :: 		measured_power = (INT32)voltage_in * (INT32)current_in;
0x025E	0xF004C059  	MOVFF       _voltage_in, R4
0x0262	0xF005C05A  	MOVFF       _voltage_in+1, R5
0x0266	0x0E00      	MOVLW       0
0x0268	0xBE5A      	BTFSC       _voltage_in+1, 7 
0x026A	0x0EFF      	MOVLW       255
0x026C	0x6E06      	MOVWF       R6 
0x026E	0x6E07      	MOVWF       R7 
0x0270	0xF000C008  	MOVFF       R8, R0
0x0274	0xF001C009  	MOVFF       R9, R1
0x0278	0x0E00      	MOVLW       0
0x027A	0xBE09      	BTFSC       R9, 7 
0x027C	0x0EFF      	MOVLW       255
0x027E	0x6E02      	MOVWF       R2 
0x0280	0x6E03      	MOVWF       R3 
0x0282	0xDF6D      	RCALL       _Mul_32x32_U
0x0284	0xF02BC000  	MOVFF       R0, _measured_power
0x0288	0xF02CC001  	MOVFF       R1, _measured_power+1
0x028C	0xF02DC002  	MOVFF       R2, _measured_power+2
0x0290	0xF02EC003  	MOVFF       R3, _measured_power+3
;211105_Commande_MPPT_v2.c,166 :: 		switch(mode) {
0x0294	0xD273      	BRA         L_main9
;211105_Commande_MPPT_v2.c,167 :: 		case FAST_GMPPT: /******************************************/   /* THIS SECTION IS STILL OPTIMIZABLE */
L_main11:
;211105_Commande_MPPT_v2.c,174 :: 		if (sweep_iteration < 3 && (voltage_in < sweep_lower_bounds[sweep_iteration] || voltage_in > sweep_upper_bounds[sweep_iteration]) ) {
0x0296	0x0E03      	MOVLW       3
0x0298	0x5C38      	SUBWF       _sweep_iteration, 0 
0x029A	0xB0D8      	BTFSC       STATUS, 0 
0x029C	0xD0A8      	BRA         L_main16
0x029E	0xF000C038  	MOVFF       _sweep_iteration, R0
0x02A2	0x0E00      	MOVLW       0
0x02A4	0x6E01      	MOVWF       R1 
0x02A6	0x3600      	RLCF        R0, 1 
0x02A8	0x9000      	BCF         R0, 0 
0x02AA	0x3601      	RLCF        R1, 1 
0x02AC	0x0E32      	MOVLW       _sweep_lower_bounds
0x02AE	0x2400      	ADDWF       R0, 0 
0x02B0	0x6ED9      	MOVWF       FSR2L 
0x02B2	0x0E00      	MOVLW       hi_addr(_sweep_lower_bounds)
0x02B4	0x2001      	ADDWFC      R1, 0 
0x02B6	0x6EDA      	MOVWF       FSR2H 
0x02B8	0xFFE9CFD9  	MOVFF       FSR2L, FSR0L
0x02BC	0xFFEACFDA  	MOVFF       FSR2H, FSR0H
0x02C0	0xF001CFEE  	MOVFF       POSTINC0, R1
0x02C4	0xF002CFEE  	MOVFF       POSTINC0, R2
0x02C8	0x5002      	MOVF        R2, 0 
0x02CA	0x5C5A      	SUBWF       _voltage_in+1, 0 
0x02CC	0xE102      	BNZ         L__main74
0x02CE	0x5001      	MOVF        R1, 0 
0x02D0	0x5C59      	SUBWF       _voltage_in, 0 
L__main74:
0x02D2	0xE31C      	BNC         L__main71
0x02D4	0xF000C038  	MOVFF       _sweep_iteration, R0
0x02D8	0x0E00      	MOVLW       0
0x02DA	0x6E01      	MOVWF       R1 
0x02DC	0x3600      	RLCF        R0, 1 
0x02DE	0x9000      	BCF         R0, 0 
0x02E0	0x3601      	RLCF        R1, 1 
0x02E2	0x0E25      	MOVLW       _sweep_upper_bounds
0x02E4	0x2400      	ADDWF       R0, 0 
0x02E6	0x6ED9      	MOVWF       FSR2L 
0x02E8	0x0E00      	MOVLW       hi_addr(_sweep_upper_bounds)
0x02EA	0x2001      	ADDWFC      R1, 0 
0x02EC	0x6EDA      	MOVWF       FSR2H 
0x02EE	0xFFE9CFD9  	MOVFF       FSR2L, FSR0L
0x02F2	0xFFEACFDA  	MOVFF       FSR2H, FSR0H
0x02F6	0xF001CFEE  	MOVFF       POSTINC0, R1
0x02FA	0xF002CFEE  	MOVFF       POSTINC0, R2
0x02FE	0x505A      	MOVF        _voltage_in+1, 0 
0x0300	0x5C02      	SUBWF       R2, 0 
0x0302	0xE102      	BNZ         L__main75
0x0304	0x5059      	MOVF        _voltage_in, 0 
0x0306	0x5C01      	SUBWF       R1, 0 
L__main75:
0x0308	0xE301      	BNC         L__main71
0x030A	0xD071      	BRA         L_main16
L__main71:
L__main70:
;211105_Commande_MPPT_v2.c,175 :: 		if (voltage_in < sweep_target[sweep_iteration]) {
0x030C	0xF000C038  	MOVFF       _sweep_iteration, R0
0x0310	0x0E00      	MOVLW       0
0x0312	0x6E01      	MOVWF       R1 
0x0314	0x3600      	RLCF        R0, 1 
0x0316	0x9000      	BCF         R0, 0 
0x0318	0x3601      	RLCF        R1, 1 
0x031A	0x0E17      	MOVLW       _sweep_target
0x031C	0x2400      	ADDWF       R0, 0 
0x031E	0x6ED9      	MOVWF       FSR2L 
0x0320	0x0E00      	MOVLW       hi_addr(_sweep_target)
0x0322	0x2001      	ADDWFC      R1, 0 
0x0324	0x6EDA      	MOVWF       FSR2H 
0x0326	0xFFE9CFD9  	MOVFF       FSR2L, FSR0L
0x032A	0xFFEACFDA  	MOVFF       FSR2H, FSR0H
0x032E	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0332	0xF002CFEE  	MOVFF       POSTINC0, R2
0x0336	0x5002      	MOVF        R2, 0 
0x0338	0x5C5A      	SUBWF       _voltage_in+1, 0 
0x033A	0xE102      	BNZ         L__main76
0x033C	0x5001      	MOVF        R1, 0 
0x033E	0x5C59      	SUBWF       _voltage_in, 0 
L__main76:
0x0340	0xE22B      	BC          L_main17
;211105_Commande_MPPT_v2.c,176 :: 		D = D - ( (sweep_target[sweep_iteration] - voltage_in)>>(3+sweep_iteration) );
0x0342	0xF000C038  	MOVFF       _sweep_iteration, R0
0x0346	0x0E00      	MOVLW       0
0x0348	0x6E01      	MOVWF       R1 
0x034A	0x3600      	RLCF        R0, 1 
0x034C	0x9000      	BCF         R0, 0 
0x034E	0x3601      	RLCF        R1, 1 
0x0350	0x0E17      	MOVLW       _sweep_target
0x0352	0x2400      	ADDWF       R0, 0 
0x0354	0x6EE9      	MOVWF       FSR0L 
0x0356	0x0E00      	MOVLW       hi_addr(_sweep_target)
0x0358	0x2001      	ADDWFC      R1, 0 
0x035A	0x6EEA      	MOVWF       FSR0H 
0x035C	0x5059      	MOVF        _voltage_in, 0 
0x035E	0x5CEE      	SUBWF       POSTINC0, 0 
0x0360	0x6E03      	MOVWF       R3 
0x0362	0x505A      	MOVF        _voltage_in+1, 0 
0x0364	0x58EE      	SUBWFB      POSTINC0, 0 
0x0366	0x6E04      	MOVWF       R4 
0x0368	0x5038      	MOVF        _sweep_iteration, 0 
0x036A	0x0F03      	ADDLW       3
0x036C	0x6E00      	MOVWF       R0 
0x036E	0x6A01      	CLRF        R1 
0x0370	0x0E00      	MOVLW       0
0x0372	0x2201      	ADDWFC      R1, 1 
0x0374	0xF002C000  	MOVFF       R0, R2
0x0378	0xF000C003  	MOVFF       R3, R0
0x037C	0xF001C004  	MOVFF       R4, R1
0x0380	0x5002      	MOVF        R2, 0 
L__main77:
0x0382	0xE005      	BZ          L__main78
0x0384	0x3201      	RRCF        R1, 1 
0x0386	0x3200      	RRCF        R0, 1 
0x0388	0x9E01      	BCF         R1, 7 
0x038A	0x0FFF      	ADDLW       255
0x038C	0xD7FA      	BRA         L__main77
L__main78:
0x038E	0x5000      	MOVF        R0, 0 
0x0390	0x5E15      	SUBWF       _D, 1 
0x0392	0x5001      	MOVF        R1, 0 
0x0394	0x5A16      	SUBWFB      _D+1, 1 
;211105_Commande_MPPT_v2.c,177 :: 		}else {
0x0396	0xD02A      	BRA         L_main18
L_main17:
;211105_Commande_MPPT_v2.c,178 :: 		D = D + ( (voltage_in - sweep_target[sweep_iteration])>>(3+sweep_iteration) );
0x0398	0xF000C038  	MOVFF       _sweep_iteration, R0
0x039C	0x0E00      	MOVLW       0
0x039E	0x6E01      	MOVWF       R1 
0x03A0	0x3600      	RLCF        R0, 1 
0x03A2	0x9000      	BCF         R0, 0 
0x03A4	0x3601      	RLCF        R1, 1 
0x03A6	0x0E17      	MOVLW       _sweep_target
0x03A8	0x2400      	ADDWF       R0, 0 
0x03AA	0x6ED9      	MOVWF       FSR2L 
0x03AC	0x0E00      	MOVLW       hi_addr(_sweep_target)
0x03AE	0x2001      	ADDWFC      R1, 0 
0x03B0	0x6EDA      	MOVWF       FSR2H 
0x03B2	0x50DE      	MOVF        POSTINC2, 0 
0x03B4	0x5C59      	SUBWF       _voltage_in, 0 
0x03B6	0x6E03      	MOVWF       R3 
0x03B8	0x50DE      	MOVF        POSTINC2, 0 
0x03BA	0x585A      	SUBWFB      _voltage_in+1, 0 
0x03BC	0x6E04      	MOVWF       R4 
0x03BE	0x5038      	MOVF        _sweep_iteration, 0 
0x03C0	0x0F03      	ADDLW       3
0x03C2	0x6E00      	MOVWF       R0 
0x03C4	0x6A01      	CLRF        R1 
0x03C6	0x0E00      	MOVLW       0
0x03C8	0x2201      	ADDWFC      R1, 1 
0x03CA	0xF002C000  	MOVFF       R0, R2
0x03CE	0xF000C003  	MOVFF       R3, R0
0x03D2	0xF001C004  	MOVFF       R4, R1
0x03D6	0x5002      	MOVF        R2, 0 
L__main79:
0x03D8	0xE005      	BZ          L__main80
0x03DA	0x3201      	RRCF        R1, 1 
0x03DC	0x3200      	RRCF        R0, 1 
0x03DE	0x9E01      	BCF         R1, 7 
0x03E0	0x0FFF      	ADDLW       255
0x03E2	0xD7FA      	BRA         L__main79
L__main80:
0x03E4	0x5000      	MOVF        R0, 0 
0x03E6	0x2615      	ADDWF       _D, 1 
0x03E8	0x5001      	MOVF        R1, 0 
0x03EA	0x2216      	ADDWFC      _D+1, 1 
;211105_Commande_MPPT_v2.c,179 :: 		}
L_main18:
;211105_Commande_MPPT_v2.c,180 :: 		}else if (sweep_iteration < 3 && voltage_in >= sweep_lower_bounds[sweep_iteration] && voltage_in <= sweep_upper_bounds[sweep_iteration]) {
0x03EC	0xD080      	BRA         L_main19
L_main16:
0x03EE	0x0E03      	MOVLW       3
0x03F0	0x5C38      	SUBWF       _sweep_iteration, 0 
0x03F2	0xB0D8      	BTFSC       STATUS, 0 
0x03F4	0xD07C      	BRA         L_main22
0x03F6	0xF000C038  	MOVFF       _sweep_iteration, R0
0x03FA	0x0E00      	MOVLW       0
0x03FC	0x6E01      	MOVWF       R1 
0x03FE	0x3600      	RLCF        R0, 1 
0x0400	0x9000      	BCF         R0, 0 
0x0402	0x3601      	RLCF        R1, 1 
0x0404	0x0E32      	MOVLW       _sweep_lower_bounds
0x0406	0x2400      	ADDWF       R0, 0 
0x0408	0x6ED9      	MOVWF       FSR2L 
0x040A	0x0E00      	MOVLW       hi_addr(_sweep_lower_bounds)
0x040C	0x2001      	ADDWFC      R1, 0 
0x040E	0x6EDA      	MOVWF       FSR2H 
0x0410	0xFFE9CFD9  	MOVFF       FSR2L, FSR0L
0x0414	0xFFEACFDA  	MOVFF       FSR2H, FSR0H
0x0418	0xF001CFEE  	MOVFF       POSTINC0, R1
0x041C	0xF002CFEE  	MOVFF       POSTINC0, R2
0x0420	0x5002      	MOVF        R2, 0 
0x0422	0x5C5A      	SUBWF       _voltage_in+1, 0 
0x0424	0xE102      	BNZ         L__main81
0x0426	0x5001      	MOVF        R1, 0 
0x0428	0x5C59      	SUBWF       _voltage_in, 0 
L__main81:
0x042A	0xE361      	BNC         L_main22
0x042C	0xF000C038  	MOVFF       _sweep_iteration, R0
0x0430	0x0E00      	MOVLW       0
0x0432	0x6E01      	MOVWF       R1 
0x0434	0x3600      	RLCF        R0, 1 
0x0436	0x9000      	BCF         R0, 0 
0x0438	0x3601      	RLCF        R1, 1 
0x043A	0x0E25      	MOVLW       _sweep_upper_bounds
0x043C	0x2400      	ADDWF       R0, 0 
0x043E	0x6ED9      	MOVWF       FSR2L 
0x0440	0x0E00      	MOVLW       hi_addr(_sweep_upper_bounds)
0x0442	0x2001      	ADDWFC      R1, 0 
0x0444	0x6EDA      	MOVWF       FSR2H 
0x0446	0xFFE9CFD9  	MOVFF       FSR2L, FSR0L
0x044A	0xFFEACFDA  	MOVFF       FSR2H, FSR0H
0x044E	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0452	0xF002CFEE  	MOVFF       POSTINC0, R2
0x0456	0x505A      	MOVF        _voltage_in+1, 0 
0x0458	0x5C02      	SUBWF       R2, 0 
0x045A	0xE102      	BNZ         L__main82
0x045C	0x5059      	MOVF        _voltage_in, 0 
0x045E	0x5C01      	SUBWF       R1, 0 
L__main82:
0x0460	0xE346      	BNC         L_main22
L__main69:
;211105_Commande_MPPT_v2.c,181 :: 		sweep_duty_cycle[sweep_iteration] = D;                   // save the current duty cycle that has the correct voltage
0x0462	0x0E1D      	MOVLW       _sweep_duty_cycle
0x0464	0x6EE1      	MOVWF       FSR1L 
0x0466	0x0E00      	MOVLW       hi_addr(_sweep_duty_cycle)
0x0468	0x6EE2      	MOVWF       FSR1H 
0x046A	0x5038      	MOVF        _sweep_iteration, 0 
0x046C	0x26E1      	ADDWF       FSR1L, 1 
0x046E	0xB0D8      	BTFSC       STATUS, 0 
0x0470	0x2AE2      	INCF        FSR1H, 1 
0x0472	0xFFE6C015  	MOVFF       _D, POSTINC1
;211105_Commande_MPPT_v2.c,182 :: 		if (measured_power > P_max_fast_gmppt) {
0x0476	0x502E      	MOVF        _measured_power+3, 0 
0x0478	0x5C24      	SUBWF       _P_max_fast_gmppt+3, 0 
0x047A	0xE108      	BNZ         L__main83
0x047C	0x502D      	MOVF        _measured_power+2, 0 
0x047E	0x5C23      	SUBWF       _P_max_fast_gmppt+2, 0 
0x0480	0xE105      	BNZ         L__main83
0x0482	0x502C      	MOVF        _measured_power+1, 0 
0x0484	0x5C22      	SUBWF       _P_max_fast_gmppt+1, 0 
0x0486	0xE102      	BNZ         L__main83
0x0488	0x502B      	MOVF        _measured_power, 0 
0x048A	0x5C21      	SUBWF       _P_max_fast_gmppt, 0 
L__main83:
0x048C	0xE204      	BC          L_main23
;211105_Commande_MPPT_v2.c,183 :: 		D_max_fast_gmppt = measured_power;
0x048E	0xF020C02B  	MOVFF       _measured_power, _D_max_fast_gmppt
;211105_Commande_MPPT_v2.c,184 :: 		D_max_fast_gmppt = D;
0x0492	0xF020C015  	MOVFF       _D, _D_max_fast_gmppt
;211105_Commande_MPPT_v2.c,185 :: 		}
L_main23:
;211105_Commande_MPPT_v2.c,187 :: 		++sweep_iteration;                                       // go to the next iteration
0x0496	0x2A38      	INCF        _sweep_iteration, 1 
;211105_Commande_MPPT_v2.c,188 :: 		if (sweep_iteration < 3) {
0x0498	0x0E03      	MOVLW       3
0x049A	0x5C38      	SUBWF       _sweep_iteration, 0 
0x049C	0xE20F      	BC          L_main24
;211105_Commande_MPPT_v2.c,189 :: 		D = sweep_duty_cycle[sweep_iteration];
0x049E	0x0E1D      	MOVLW       _sweep_duty_cycle
0x04A0	0x6EE9      	MOVWF       FSR0L 
0x04A2	0x0E00      	MOVLW       hi_addr(_sweep_duty_cycle)
0x04A4	0x6EEA      	MOVWF       FSR0H 
0x04A6	0x5038      	MOVF        _sweep_iteration, 0 
0x04A8	0x26E9      	ADDWF       FSR0L, 1 
0x04AA	0xB0D8      	BTFSC       STATUS, 0 
0x04AC	0x2AEA      	INCF        FSR0H, 1 
0x04AE	0xF015CFEE  	MOVFF       POSTINC0, _D
0x04B2	0x0E00      	MOVLW       0
0x04B4	0x6E16      	MOVWF       _D+1 
0x04B6	0x0E00      	MOVLW       0
0x04B8	0x6E16      	MOVWF       _D+1 
;211105_Commande_MPPT_v2.c,190 :: 		}else { // getting here means that we have already logged the measured power for sweep 0, 1, 2
0x04BA	0xD019      	BRA         L_main25
L_main24:
;211105_Commande_MPPT_v2.c,192 :: 		D = D_max_fast_gmppt;
0x04BC	0xF015C020  	MOVFF       _D_max_fast_gmppt, _D
0x04C0	0x0E00      	MOVLW       0
0x04C2	0x6E16      	MOVWF       _D+1 
;211105_Commande_MPPT_v2.c,195 :: 		last_voltage_in = 0;
0x04C4	0x6A39      	CLRF        _last_voltage_in 
0x04C6	0x6A3A      	CLRF        _last_voltage_in+1 
;211105_Commande_MPPT_v2.c,196 :: 		last_current_in = 0;
0x04C8	0x6A4A      	CLRF        _last_current_in 
0x04CA	0x6A4B      	CLRF        _last_current_in+1 
;211105_Commande_MPPT_v2.c,197 :: 		last_voltage_out = 0;
0x04CC	0x6A48      	CLRF        _last_voltage_out 
0x04CE	0x6A49      	CLRF        _last_voltage_out+1 
;211105_Commande_MPPT_v2.c,198 :: 		last_measured_power = 0;
0x04D0	0x6A4C      	CLRF        _last_measured_power 
0x04D2	0x6A4D      	CLRF        _last_measured_power+1 
0x04D4	0x6A4E      	CLRF        _last_measured_power+2 
0x04D6	0x6A4F      	CLRF        _last_measured_power+3 
;211105_Commande_MPPT_v2.c,199 :: 		last_delta_power = 0;
0x04D8	0x6A51      	CLRF        _last_delta_power 
0x04DA	0x6A52      	CLRF        _last_delta_power+1 
0x04DC	0x6A53      	CLRF        _last_delta_power+2 
0x04DE	0x6A54      	CLRF        _last_delta_power+3 
;211105_Commande_MPPT_v2.c,202 :: 		speed_coeff = 4;
0x04E0	0x0E04      	MOVLW       4
0x04E2	0x6E50      	MOVWF       _speed_coeff 
;211105_Commande_MPPT_v2.c,204 :: 		P_max_adaptive = 0;
0x04E4	0x6A44      	CLRF        _P_max_adaptive 
0x04E6	0x6A45      	CLRF        _P_max_adaptive+1 
0x04E8	0x6A46      	CLRF        _P_max_adaptive+2 
0x04EA	0x6A47      	CLRF        _P_max_adaptive+3 
;211105_Commande_MPPT_v2.c,205 :: 		D_max_adaptive = 0;
0x04EC	0x6A3F      	CLRF        _D_max_adaptive 
;211105_Commande_MPPT_v2.c,206 :: 		}
L_main25:
;211105_Commande_MPPT_v2.c,207 :: 		}
L_main22:
L_main19:
;211105_Commande_MPPT_v2.c,208 :: 		break;
0x04EE	0xD151      	BRA         L_main10
;211105_Commande_MPPT_v2.c,209 :: 		case ADAPTIVE_PO:    /******************************************/
L_main26:
;211105_Commande_MPPT_v2.c,211 :: 		delta_power = measured_power - last_measured_power;
0x04F0	0xF03BC02B  	MOVFF       _measured_power, _delta_power
0x04F4	0xF03CC02C  	MOVFF       _measured_power+1, _delta_power+1
0x04F8	0xF03DC02D  	MOVFF       _measured_power+2, _delta_power+2
0x04FC	0xF03EC02E  	MOVFF       _measured_power+3, _delta_power+3
0x0500	0x504C      	MOVF        _last_measured_power, 0 
0x0502	0x5E3B      	SUBWF       _delta_power, 1 
0x0504	0x504D      	MOVF        _last_measured_power+1, 0 
0x0506	0x5A3C      	SUBWFB      _delta_power+1, 1 
0x0508	0x504E      	MOVF        _last_measured_power+2, 0 
0x050A	0x5A3D      	SUBWFB      _delta_power+2, 1 
0x050C	0x504F      	MOVF        _last_measured_power+3, 0 
0x050E	0x5A3E      	SUBWFB      _delta_power+3, 1 
;211105_Commande_MPPT_v2.c,212 :: 		delta_voltage = voltage_in - last_voltage_in;
0x0510	0x5039      	MOVF        _last_voltage_in, 0 
0x0512	0x5C59      	SUBWF       _voltage_in, 0 
0x0514	0x6E40      	MOVWF       _delta_voltage 
0x0516	0x503A      	MOVF        _last_voltage_in+1, 0 
0x0518	0x585A      	SUBWFB      _voltage_in+1, 0 
0x051A	0x6E41      	MOVWF       _delta_voltage+1 
;211105_Commande_MPPT_v2.c,214 :: 		if (measured_power > P_max_adaptive) {
0x051C	0x502E      	MOVF        _measured_power+3, 0 
0x051E	0x5C47      	SUBWF       _P_max_adaptive+3, 0 
0x0520	0xE108      	BNZ         L__main84
0x0522	0x502D      	MOVF        _measured_power+2, 0 
0x0524	0x5C46      	SUBWF       _P_max_adaptive+2, 0 
0x0526	0xE105      	BNZ         L__main84
0x0528	0x502C      	MOVF        _measured_power+1, 0 
0x052A	0x5C45      	SUBWF       _P_max_adaptive+1, 0 
0x052C	0xE102      	BNZ         L__main84
0x052E	0x502B      	MOVF        _measured_power, 0 
0x0530	0x5C44      	SUBWF       _P_max_adaptive, 0 
L__main84:
0x0532	0xE20A      	BC          L_main27
;211105_Commande_MPPT_v2.c,215 :: 		D_max_adaptive = D;
0x0534	0xF03FC015  	MOVFF       _D, _D_max_adaptive
;211105_Commande_MPPT_v2.c,216 :: 		P_max_adaptive = measured_power;
0x0538	0xF044C02B  	MOVFF       _measured_power, _P_max_adaptive
0x053C	0xF045C02C  	MOVFF       _measured_power+1, _P_max_adaptive+1
0x0540	0xF046C02D  	MOVFF       _measured_power+2, _P_max_adaptive+2
0x0544	0xF047C02E  	MOVFF       _measured_power+3, _P_max_adaptive+3
;211105_Commande_MPPT_v2.c,217 :: 		}
L_main27:
;211105_Commande_MPPT_v2.c,223 :: 		if (voltage_in >= 680) {
0x0548	0x0E80      	MOVLW       128
0x054A	0x185A      	XORWF       _voltage_in+1, 0 
0x054C	0x6E00      	MOVWF       R0 
0x054E	0x0E80      	MOVLW       128
0x0550	0x0A02      	XORLW       2
0x0552	0x5C00      	SUBWF       R0, 0 
0x0554	0xE102      	BNZ         L__main85
0x0556	0x0EA8      	MOVLW       168
0x0558	0x5C59      	SUBWF       _voltage_in, 0 
L__main85:
0x055A	0xE303      	BNC         L_main28
;211105_Commande_MPPT_v2.c,224 :: 		D_step = speed_coeff;
0x055C	0xF043C050  	MOVFF       _speed_coeff, _D_step
;211105_Commande_MPPT_v2.c,225 :: 		}else if (voltage_in >= 470) {
0x0560	0xD019      	BRA         L_main29
L_main28:
0x0562	0x0E80      	MOVLW       128
0x0564	0x185A      	XORWF       _voltage_in+1, 0 
0x0566	0x6E00      	MOVWF       R0 
0x0568	0x0E80      	MOVLW       128
0x056A	0x0A01      	XORLW       1
0x056C	0x5C00      	SUBWF       R0, 0 
0x056E	0xE102      	BNZ         L__main86
0x0570	0x0ED6      	MOVLW       214
0x0572	0x5C59      	SUBWF       _voltage_in, 0 
L__main86:
0x0574	0xE305      	BNC         L_main30
;211105_Commande_MPPT_v2.c,226 :: 		D_step = speed_coeff>>1;
0x0576	0xF043C050  	MOVFF       _speed_coeff, _D_step
0x057A	0x3243      	RRCF        _D_step, 1 
0x057C	0x9E43      	BCF         _D_step, 7 
;211105_Commande_MPPT_v2.c,227 :: 		}else {
0x057E	0xD00A      	BRA         L_main31
L_main30:
;211105_Commande_MPPT_v2.c,228 :: 		D_step = speed_coeff>>4;
0x0580	0xF043C050  	MOVFF       _speed_coeff, _D_step
0x0584	0x3243      	RRCF        _D_step, 1 
0x0586	0x9E43      	BCF         _D_step, 7 
0x0588	0x3243      	RRCF        _D_step, 1 
0x058A	0x9E43      	BCF         _D_step, 7 
0x058C	0x3243      	RRCF        _D_step, 1 
0x058E	0x9E43      	BCF         _D_step, 7 
0x0590	0x3243      	RRCF        _D_step, 1 
0x0592	0x9E43      	BCF         _D_step, 7 
;211105_Commande_MPPT_v2.c,229 :: 		}
L_main31:
L_main29:
;211105_Commande_MPPT_v2.c,232 :: 		if (last_measured_power) {
0x0594	0x504C      	MOVF        _last_measured_power, 0 
0x0596	0x104D      	IORWF       _last_measured_power+1, 0 
0x0598	0x104E      	IORWF       _last_measured_power+2, 0 
0x059A	0x104F      	IORWF       _last_measured_power+3, 0 
0x059C	0xB4D8      	BTFSC       STATUS, 2 
0x059E	0xD094      	BRA         L_main32
;211105_Commande_MPPT_v2.c,233 :: 		if ( (delta_power >= 0 && delta_voltage >= 0) || (delta_power <= 0 && delta_voltage <= 0) ) {
0x05A0	0x0E80      	MOVLW       128
0x05A2	0x183E      	XORWF       _delta_power+3, 0 
0x05A4	0x6E00      	MOVWF       R0 
0x05A6	0x0E80      	MOVLW       128
0x05A8	0x5C00      	SUBWF       R0, 0 
0x05AA	0xE108      	BNZ         L__main87
0x05AC	0x0E00      	MOVLW       0
0x05AE	0x5C3D      	SUBWF       _delta_power+2, 0 
0x05B0	0xE105      	BNZ         L__main87
0x05B2	0x0E00      	MOVLW       0
0x05B4	0x5C3C      	SUBWF       _delta_power+1, 0 
0x05B6	0xE102      	BNZ         L__main87
0x05B8	0x0E00      	MOVLW       0
0x05BA	0x5C3B      	SUBWF       _delta_power, 0 
L__main87:
0x05BC	0xE30A      	BNC         L__main68
0x05BE	0x0E80      	MOVLW       128
0x05C0	0x1841      	XORWF       _delta_voltage+1, 0 
0x05C2	0x6E00      	MOVWF       R0 
0x05C4	0x0E80      	MOVLW       128
0x05C6	0x5C00      	SUBWF       R0, 0 
0x05C8	0xE102      	BNZ         L__main88
0x05CA	0x0E00      	MOVLW       0
0x05CC	0x5C40      	SUBWF       _delta_voltage, 0 
L__main88:
0x05CE	0xE301      	BNC         L__main68
0x05D0	0xD01A      	BRA         L__main66
L__main68:
0x05D2	0x0E80      	MOVLW       128
0x05D4	0x6E00      	MOVWF       R0 
0x05D6	0x0E80      	MOVLW       128
0x05D8	0x183E      	XORWF       _delta_power+3, 0 
0x05DA	0x5C00      	SUBWF       R0, 0 
0x05DC	0xE108      	BNZ         L__main89
0x05DE	0x503D      	MOVF        _delta_power+2, 0 
0x05E0	0x0800      	SUBLW       0
0x05E2	0xE105      	BNZ         L__main89
0x05E4	0x503C      	MOVF        _delta_power+1, 0 
0x05E6	0x0800      	SUBLW       0
0x05E8	0xE102      	BNZ         L__main89
0x05EA	0x503B      	MOVF        _delta_power, 0 
0x05EC	0x0800      	SUBLW       0
L__main89:
0x05EE	0xE30A      	BNC         L__main67
0x05F0	0x0E80      	MOVLW       128
0x05F2	0x6E00      	MOVWF       R0 
0x05F4	0x0E80      	MOVLW       128
0x05F6	0x1841      	XORWF       _delta_voltage+1, 0 
0x05F8	0x5C00      	SUBWF       R0, 0 
0x05FA	0xE102      	BNZ         L__main90
0x05FC	0x5040      	MOVF        _delta_voltage, 0 
0x05FE	0x0800      	SUBLW       0
L__main90:
0x0600	0xE301      	BNC         L__main67
0x0602	0xD001      	BRA         L__main66
L__main67:
0x0604	0xD005      	BRA         L_main39
L__main66:
;211105_Commande_MPPT_v2.c,234 :: 		D -= D_step;
0x0606	0x5043      	MOVF        _D_step, 0 
0x0608	0x5E15      	SUBWF       _D, 1 
0x060A	0x0E00      	MOVLW       0
0x060C	0x5A16      	SUBWFB      _D+1, 1 
;211105_Commande_MPPT_v2.c,235 :: 		}else {
0x060E	0xD004      	BRA         L_main40
L_main39:
;211105_Commande_MPPT_v2.c,236 :: 		D += D_step;
0x0610	0x5043      	MOVF        _D_step, 0 
0x0612	0x2615      	ADDWF       _D, 1 
0x0614	0x0E00      	MOVLW       0
0x0616	0x2216      	ADDWFC      _D+1, 1 
;211105_Commande_MPPT_v2.c,237 :: 		}
L_main40:
;211105_Commande_MPPT_v2.c,238 :: 		if (oscillation_detect < OSCILLATION_MAX) {
0x0618	0x0E04      	MOVLW       4
0x061A	0x5C42      	SUBWF       _oscillation_detect, 0 
0x061C	0xE242      	BC          L_main41
;211105_Commande_MPPT_v2.c,239 :: 		if ( (last_delta_power >= 0 && delta_power <= 0) || (last_delta_power <= 0 && delta_power >= 0) ) {
0x061E	0x0E80      	MOVLW       128
0x0620	0x1854      	XORWF       _last_delta_power+3, 0 
0x0622	0x6E00      	MOVWF       R0 
0x0624	0x0E80      	MOVLW       128
0x0626	0x5C00      	SUBWF       R0, 0 
0x0628	0xE108      	BNZ         L__main91
0x062A	0x0E00      	MOVLW       0
0x062C	0x5C53      	SUBWF       _last_delta_power+2, 0 
0x062E	0xE105      	BNZ         L__main91
0x0630	0x0E00      	MOVLW       0
0x0632	0x5C52      	SUBWF       _last_delta_power+1, 0 
0x0634	0xE102      	BNZ         L__main91
0x0636	0x0E00      	MOVLW       0
0x0638	0x5C51      	SUBWF       _last_delta_power, 0 
L__main91:
0x063A	0xE310      	BNC         L__main65
0x063C	0x0E80      	MOVLW       128
0x063E	0x6E00      	MOVWF       R0 
0x0640	0x0E80      	MOVLW       128
0x0642	0x183E      	XORWF       _delta_power+3, 0 
0x0644	0x5C00      	SUBWF       R0, 0 
0x0646	0xE108      	BNZ         L__main92
0x0648	0x503D      	MOVF        _delta_power+2, 0 
0x064A	0x0800      	SUBLW       0
0x064C	0xE105      	BNZ         L__main92
0x064E	0x503C      	MOVF        _delta_power+1, 0 
0x0650	0x0800      	SUBLW       0
0x0652	0xE102      	BNZ         L__main92
0x0654	0x503B      	MOVF        _delta_power, 0 
0x0656	0x0800      	SUBLW       0
L__main92:
0x0658	0xE301      	BNC         L__main65
0x065A	0xD020      	BRA         L__main63
L__main65:
0x065C	0x0E80      	MOVLW       128
0x065E	0x6E00      	MOVWF       R0 
0x0660	0x0E80      	MOVLW       128
0x0662	0x1854      	XORWF       _last_delta_power+3, 0 
0x0664	0x5C00      	SUBWF       R0, 0 
0x0666	0xE108      	BNZ         L__main93
0x0668	0x5053      	MOVF        _last_delta_power+2, 0 
0x066A	0x0800      	SUBLW       0
0x066C	0xE105      	BNZ         L__main93
0x066E	0x5052      	MOVF        _last_delta_power+1, 0 
0x0670	0x0800      	SUBLW       0
0x0672	0xE102      	BNZ         L__main93
0x0674	0x5051      	MOVF        _last_delta_power, 0 
0x0676	0x0800      	SUBLW       0
L__main93:
0x0678	0xE310      	BNC         L__main64
0x067A	0x0E80      	MOVLW       128
0x067C	0x183E      	XORWF       _delta_power+3, 0 
0x067E	0x6E00      	MOVWF       R0 
0x0680	0x0E80      	MOVLW       128
0x0682	0x5C00      	SUBWF       R0, 0 
0x0684	0xE108      	BNZ         L__main94
0x0686	0x0E00      	MOVLW       0
0x0688	0x5C3D      	SUBWF       _delta_power+2, 0 
0x068A	0xE105      	BNZ         L__main94
0x068C	0x0E00      	MOVLW       0
0x068E	0x5C3C      	SUBWF       _delta_power+1, 0 
0x0690	0xE102      	BNZ         L__main94
0x0692	0x0E00      	MOVLW       0
0x0694	0x5C3B      	SUBWF       _delta_power, 0 
L__main94:
0x0696	0xE301      	BNC         L__main64
0x0698	0xD001      	BRA         L__main63
L__main64:
0x069A	0xD002      	BRA         L_main48
L__main63:
;211105_Commande_MPPT_v2.c,240 :: 		++oscillation_detect;                // increment the oscillation detect counter
0x069C	0x2A42      	INCF        _oscillation_detect, 1 
;211105_Commande_MPPT_v2.c,241 :: 		}else {
0x069E	0xD001      	BRA         L_main49
L_main48:
;211105_Commande_MPPT_v2.c,242 :: 		oscillation_detect = 0;              // any interruption means we need to reset this counter
0x06A0	0x6A42      	CLRF        _oscillation_detect 
;211105_Commande_MPPT_v2.c,243 :: 		}
L_main49:
;211105_Commande_MPPT_v2.c,244 :: 		}
L_main41:
;211105_Commande_MPPT_v2.c,245 :: 		if (oscillation_detect == OSCILLATION_MAX && speed_coeff > 0) {
0x06A2	0x5042      	MOVF        _oscillation_detect, 0 
0x06A4	0x0A04      	XORLW       4
0x06A6	0xE106      	BNZ         L_main52
0x06A8	0x5050      	MOVF        _speed_coeff, 0 
0x06AA	0x0800      	SUBLW       0
0x06AC	0xE203      	BC          L_main52
L__main62:
;211105_Commande_MPPT_v2.c,246 :: 		speed_coeff >>= 1;
0x06AE	0x3250      	RRCF        _speed_coeff, 1 
0x06B0	0x9E50      	BCF         _speed_coeff, 7 
;211105_Commande_MPPT_v2.c,247 :: 		oscillation_detect = 0;
0x06B2	0x6A42      	CLRF        _oscillation_detect 
;211105_Commande_MPPT_v2.c,248 :: 		}
L_main52:
;211105_Commande_MPPT_v2.c,249 :: 		if (speed_coeff == 0) {
0x06B4	0x5050      	MOVF        _speed_coeff, 0 
0x06B6	0x0A00      	XORLW       0
0x06B8	0xE107      	BNZ         L_main53
;211105_Commande_MPPT_v2.c,250 :: 		mode = STEADY_STATE;                   // if speed_coeff becomes 0 it means that we should go into steady state
0x06BA	0x0E02      	MOVLW       2
0x06BC	0x6E31      	MOVWF       _mode 
;211105_Commande_MPPT_v2.c,251 :: 		oscillation_detect = 0;
0x06BE	0x6A42      	CLRF        _oscillation_detect 
;211105_Commande_MPPT_v2.c,252 :: 		D = D_max_adaptive;
0x06C0	0xF015C03F  	MOVFF       _D_max_adaptive, _D
0x06C4	0x0E00      	MOVLW       0
0x06C6	0x6E16      	MOVWF       _D+1 
;211105_Commande_MPPT_v2.c,253 :: 		}
L_main53:
;211105_Commande_MPPT_v2.c,254 :: 		}
L_main32:
;211105_Commande_MPPT_v2.c,257 :: 		last_delta_power = delta_power;
0x06C8	0xF051C03B  	MOVFF       _delta_power, _last_delta_power
0x06CC	0xF052C03C  	MOVFF       _delta_power+1, _last_delta_power+1
0x06D0	0xF053C03D  	MOVFF       _delta_power+2, _last_delta_power+2
0x06D4	0xF054C03E  	MOVFF       _delta_power+3, _last_delta_power+3
;211105_Commande_MPPT_v2.c,258 :: 		last_voltage_in = voltage_in;
0x06D8	0xF039C059  	MOVFF       _voltage_in, _last_voltage_in
0x06DC	0xF03AC05A  	MOVFF       _voltage_in+1, _last_voltage_in+1
;211105_Commande_MPPT_v2.c,259 :: 		last_measured_power = measured_power;
0x06E0	0xF04CC02B  	MOVFF       _measured_power, _last_measured_power
0x06E4	0xF04DC02C  	MOVFF       _measured_power+1, _last_measured_power+1
0x06E8	0xF04EC02D  	MOVFF       _measured_power+2, _last_measured_power+2
0x06EC	0xF04FC02E  	MOVFF       _measured_power+3, _last_measured_power+3
;211105_Commande_MPPT_v2.c,260 :: 		break;
0x06F0	0xD050      	BRA         L_main10
;211105_Commande_MPPT_v2.c,261 :: 		case STEADY_STATE:
L_main54:
;211105_Commande_MPPT_v2.c,264 :: 		if ((measured_power - P_max_adaptive) > 1000 || (measured_power - P_max_adaptive) > 1000) {
0x06F2	0xF001C02B  	MOVFF       _measured_power, R1
0x06F6	0xF002C02C  	MOVFF       _measured_power+1, R2
0x06FA	0xF003C02D  	MOVFF       _measured_power+2, R3
0x06FE	0xF004C02E  	MOVFF       _measured_power+3, R4
0x0702	0x5044      	MOVF        _P_max_adaptive, 0 
0x0704	0x5E01      	SUBWF       R1, 1 
0x0706	0x5045      	MOVF        _P_max_adaptive+1, 0 
0x0708	0x5A02      	SUBWFB      R2, 1 
0x070A	0x5046      	MOVF        _P_max_adaptive+2, 0 
0x070C	0x5A03      	SUBWFB      R3, 1 
0x070E	0x5047      	MOVF        _P_max_adaptive+3, 0 
0x0710	0x5A04      	SUBWFB      R4, 1 
0x0712	0x5004      	MOVF        R4, 0 
0x0714	0x0800      	SUBLW       0
0x0716	0xE108      	BNZ         L__main95
0x0718	0x5003      	MOVF        R3, 0 
0x071A	0x0800      	SUBLW       0
0x071C	0xE105      	BNZ         L__main95
0x071E	0x5002      	MOVF        R2, 0 
0x0720	0x0803      	SUBLW       3
0x0722	0xE102      	BNZ         L__main95
0x0724	0x5001      	MOVF        R1, 0 
0x0726	0x08E8      	SUBLW       232
L__main95:
0x0728	0xE31D      	BNC         L__main61
0x072A	0xF001C02B  	MOVFF       _measured_power, R1
0x072E	0xF002C02C  	MOVFF       _measured_power+1, R2
0x0732	0xF003C02D  	MOVFF       _measured_power+2, R3
0x0736	0xF004C02E  	MOVFF       _measured_power+3, R4
0x073A	0x5044      	MOVF        _P_max_adaptive, 0 
0x073C	0x5E01      	SUBWF       R1, 1 
0x073E	0x5045      	MOVF        _P_max_adaptive+1, 0 
0x0740	0x5A02      	SUBWFB      R2, 1 
0x0742	0x5046      	MOVF        _P_max_adaptive+2, 0 
0x0744	0x5A03      	SUBWFB      R3, 1 
0x0746	0x5047      	MOVF        _P_max_adaptive+3, 0 
0x0748	0x5A04      	SUBWFB      R4, 1 
0x074A	0x5004      	MOVF        R4, 0 
0x074C	0x0800      	SUBLW       0
0x074E	0xE108      	BNZ         L__main96
0x0750	0x5003      	MOVF        R3, 0 
0x0752	0x0800      	SUBLW       0
0x0754	0xE105      	BNZ         L__main96
0x0756	0x5002      	MOVF        R2, 0 
0x0758	0x0803      	SUBLW       3
0x075A	0xE102      	BNZ         L__main96
0x075C	0x5001      	MOVF        R1, 0 
0x075E	0x08E8      	SUBLW       232
L__main96:
0x0760	0xE301      	BNC         L__main61
0x0762	0xD00B      	BRA         L_main57
L__main61:
;211105_Commande_MPPT_v2.c,265 :: 		mode = FAST_GMPPT;
0x0764	0x0E01      	MOVLW       1
0x0766	0x6E31      	MOVWF       _mode 
;211105_Commande_MPPT_v2.c,266 :: 		P_max_adaptive = 0;                // reset P_max_adaptive
0x0768	0x6A44      	CLRF        _P_max_adaptive 
0x076A	0x6A45      	CLRF        _P_max_adaptive+1 
0x076C	0x6A46      	CLRF        _P_max_adaptive+2 
0x076E	0x6A47      	CLRF        _P_max_adaptive+3 
;211105_Commande_MPPT_v2.c,267 :: 		P_max_fast_gmppt = 0;              // register the max power obtained during the sweep
0x0770	0x6A21      	CLRF        _P_max_fast_gmppt 
0x0772	0x6A22      	CLRF        _P_max_fast_gmppt+1 
0x0774	0x6A23      	CLRF        _P_max_fast_gmppt+2 
0x0776	0x6A24      	CLRF        _P_max_fast_gmppt+3 
;211105_Commande_MPPT_v2.c,268 :: 		D_max_fast_gmppt = 0;
0x0778	0x6A20      	CLRF        _D_max_fast_gmppt 
;211105_Commande_MPPT_v2.c,269 :: 		}
L_main57:
;211105_Commande_MPPT_v2.c,270 :: 		break;
0x077A	0xD00B      	BRA         L_main10
;211105_Commande_MPPT_v2.c,271 :: 		}
L_main9:
0x077C	0x5031      	MOVF        _mode, 0 
0x077E	0x0A01      	XORLW       1
0x0780	0xB4D8      	BTFSC       STATUS, 2 
0x0782	0xD589      	BRA         L_main11
0x0784	0x5031      	MOVF        _mode, 0 
0x0786	0x0A00      	XORLW       0
0x0788	0xB4D8      	BTFSC       STATUS, 2 
0x078A	0xD6B2      	BRA         L_main26
0x078C	0x5031      	MOVF        _mode, 0 
0x078E	0x0A02      	XORLW       2
0x0790	0xE0B0      	BZ          L_main54
L_main10:
;211105_Commande_MPPT_v2.c,274 :: 		if (D > MAX_PWM) {
0x0792	0x0E00      	MOVLW       0
0x0794	0x6E00      	MOVWF       R0 
0x0796	0x5016      	MOVF        _D+1, 0 
0x0798	0x5C00      	SUBWF       R0, 0 
0x079A	0xE102      	BNZ         L__main97
0x079C	0x5015      	MOVF        _D, 0 
0x079E	0x08E6      	SUBLW       230
L__main97:
0x07A0	0xE205      	BC          L_main58
;211105_Commande_MPPT_v2.c,275 :: 		D = MAX_PWM;
0x07A2	0x0EE6      	MOVLW       230
0x07A4	0x6E15      	MOVWF       _D 
0x07A6	0x0E00      	MOVLW       0
0x07A8	0x6E16      	MOVWF       _D+1 
;211105_Commande_MPPT_v2.c,276 :: 		}else if (D < MIN_PWM) {
0x07AA	0xD00A      	BRA         L_main59
L_main58:
0x07AC	0x0E00      	MOVLW       0
0x07AE	0x5C16      	SUBWF       _D+1, 0 
0x07B0	0xE102      	BNZ         L__main98
0x07B2	0x0E20      	MOVLW       32
0x07B4	0x5C15      	SUBWF       _D, 0 
L__main98:
0x07B6	0xE204      	BC          L_main60
;211105_Commande_MPPT_v2.c,277 :: 		D = MIN_PWM;
0x07B8	0x0E20      	MOVLW       32
0x07BA	0x6E15      	MOVWF       _D 
0x07BC	0x0E00      	MOVLW       0
0x07BE	0x6E16      	MOVWF       _D+1 
;211105_Commande_MPPT_v2.c,278 :: 		}
L_main60:
L_main59:
;211105_Commande_MPPT_v2.c,279 :: 		PWM1_Set_Duty(D);                   // send duty cycle
0x07C0	0xF05BC015  	MOVFF       _D, FARG_PWM1_Set_Duty_new_duty
0x07C4	0xDC96      	RCALL       _PWM1_Set_Duty
;211105_Commande_MPPT_v2.c,281 :: 		T0CON |= BIT7;    // enable timer here
0x07C6	0x8ED5      	BSF         T0CON, 7 
;211105_Commande_MPPT_v2.c,283 :: 		settled = 0;
0x07C8	0x6A57      	CLRF        _settled 
;211105_Commande_MPPT_v2.c,284 :: 		}
L_main2:
;211105_Commande_MPPT_v2.c,285 :: 		asm clrwdt;
0x07CA	0x0004      	CLRWDT
;211105_Commande_MPPT_v2.c,286 :: 		};
0x07CC	0xD4F4      	BRA         L_main0
;211105_Commande_MPPT_v2.c,287 :: 		}
0x07CE	0xD7FF      	BRA         $+0
; end of _main
0x0816	0xF015EE10  	LFSR        1, 21
0x081A	0x0E46      	MOVLW       70
0x081C	0x6E00      	MOVWF       R0 
0x081E	0x0E01      	MOVLW       1
0x0820	0x6E01      	MOVWF       R1 
0x0822	0x0ED0      	MOVLW       208
0x0824	0x6EF6      	MOVWF       4086 
0x0826	0x0E07      	MOVLW       7
0x0828	0x6EF7      	MOVWF       TBLPTRH 
0x082A	0x0E00      	MOVLW       0
0x082C	0x6EF8      	MOVWF       TBLPTRU 
0x082E	0xF000EC71  	CALL        226, 0
0x0832	0x0012      	RETURN      0
;211105_Commande_MPPT_v2.c,0 :: ?ICS_D
0x07D0	0x00E6 ;?ICS_D+0
; end of ?ICS_D
;211105_Commande_MPPT_v2.c,0 :: ?ICS_sweep_target
0x07D2	0x0168 ;?ICS_sweep_target+0
0x07D4	0x026C ;?ICS_sweep_target+2
0x07D6	0x0366 ;?ICS_sweep_target+4
; end of ?ICS_sweep_target
;211105_Commande_MPPT_v2.c,0 :: ?ICS_sweep_duty_cycle
0x07D8	0x0000 ;?ICS_sweep_duty_cycle+0
0x07DA	0x00 ;?ICS_sweep_duty_cycle+2
; end of ?ICS_sweep_duty_cycle
;211105_Commande_MPPT_v2.c,0 :: ?ICS_D_max_fast_gmppt
0x07DB	0x00 ;?ICS_D_max_fast_gmppt+0
; end of ?ICS_D_max_fast_gmppt
;211105_Commande_MPPT_v2.c,0 :: ?ICS_P_max_fast_gmppt
0x07DC	0x0000 ;?ICS_P_max_fast_gmppt+0
0x07DE	0x0000 ;?ICS_P_max_fast_gmppt+2
; end of ?ICS_P_max_fast_gmppt
;211105_Commande_MPPT_v2.c,0 :: ?ICS_sweep_upper_bounds
0x07E0	0x0172 ;?ICS_sweep_upper_bounds+0
0x07E2	0x0280 ;?ICS_sweep_upper_bounds+2
0x07E4	0x0389 ;?ICS_sweep_upper_bounds+4
; end of ?ICS_sweep_upper_bounds
;211105_Commande_MPPT_v2.c,0 :: ?ICS_measured_power
0x07E6	0x0000 ;?ICS_measured_power+0
0x07E8	0x0000 ;?ICS_measured_power+2
; end of ?ICS_measured_power
;211105_Commande_MPPT_v2.c,0 :: ?ICS_current_in
0x07EA	0x0000 ;?ICS_current_in+0
; end of ?ICS_current_in
;211105_Commande_MPPT_v2.c,0 :: ?ICS_mode
0x07EC	0x02 ;?ICS_mode+0
; end of ?ICS_mode
;211105_Commande_MPPT_v2.c,0 :: ?ICS_sweep_lower_bounds
0x07ED	0x015E ;?ICS_sweep_lower_bounds+0
0x07EF	0x0258 ;?ICS_sweep_lower_bounds+2
0x07F1	0x0343 ;?ICS_sweep_lower_bounds+4
; end of ?ICS_sweep_lower_bounds
;211105_Commande_MPPT_v2.c,0 :: ?ICS_sweep_iteration
0x07F3	0x00 ;?ICS_sweep_iteration+0
; end of ?ICS_sweep_iteration
;211105_Commande_MPPT_v2.c,0 :: ?ICS_last_voltage_in
0x07F4	0x0000 ;?ICS_last_voltage_in+0
; end of ?ICS_last_voltage_in
;211105_Commande_MPPT_v2.c,0 :: ?ICS_delta_power
0x07F6	0x0000 ;?ICS_delta_power+0
0x07F8	0x0000 ;?ICS_delta_power+2
; end of ?ICS_delta_power
;211105_Commande_MPPT_v2.c,0 :: ?ICS_D_max_adaptive
0x07FA	0x00 ;?ICS_D_max_adaptive+0
; end of ?ICS_D_max_adaptive
;211105_Commande_MPPT_v2.c,0 :: ?ICS_delta_voltage
0x07FB	0x0000 ;?ICS_delta_voltage+0
; end of ?ICS_delta_voltage
;211105_Commande_MPPT_v2.c,0 :: ?ICS_oscillation_detect
0x07FD	0x00 ;?ICS_oscillation_detect+0
; end of ?ICS_oscillation_detect
;211105_Commande_MPPT_v2.c,0 :: ?ICS_D_step
0x07FE	0x00 ;?ICS_D_step+0
; end of ?ICS_D_step
;211105_Commande_MPPT_v2.c,0 :: ?ICS_P_max_adaptive
0x07FF	0x0000 ;?ICS_P_max_adaptive+0
0x0801	0x0000 ;?ICS_P_max_adaptive+2
; end of ?ICS_P_max_adaptive
;211105_Commande_MPPT_v2.c,0 :: ?ICS_last_voltage_out
0x0803	0x0000 ;?ICS_last_voltage_out+0
; end of ?ICS_last_voltage_out
;211105_Commande_MPPT_v2.c,0 :: ?ICS_last_current_in
0x0805	0x0000 ;?ICS_last_current_in+0
; end of ?ICS_last_current_in
;211105_Commande_MPPT_v2.c,0 :: ?ICS_last_measured_power
0x0807	0x0000 ;?ICS_last_measured_power+0
0x0809	0x0000 ;?ICS_last_measured_power+2
; end of ?ICS_last_measured_power
;211105_Commande_MPPT_v2.c,0 :: ?ICS_speed_coeff
0x080B	0x00 ;?ICS_speed_coeff+0
; end of ?ICS_speed_coeff
;211105_Commande_MPPT_v2.c,0 :: ?ICS_last_delta_power
0x080C	0x0000 ;?ICS_last_delta_power+0
0x080E	0x0000 ;?ICS_last_delta_power+2
; end of ?ICS_last_delta_power
;211105_Commande_MPPT_v2.c,0 :: ?ICS_voltage_out
0x0810	0x0000 ;?ICS_voltage_out+0
; end of ?ICS_voltage_out
;211105_Commande_MPPT_v2.c,0 :: ?ICS_settled
0x0812	0x00 ;?ICS_settled+0
; end of ?ICS_settled
;211105_Commande_MPPT_v2.c,0 :: ?ICS_counter
0x0813	0x00 ;?ICS_counter+0
; end of ?ICS_counter
;211105_Commande_MPPT_v2.c,0 :: ?ICS_voltage_in
0x0814	0x0000 ;?ICS_voltage_in+0
; end of ?ICS_voltage_in
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [12]    _interrupt
0x0014      [12]    _Delay_22us
0x0020      [10]    _PWM1_Start
0x002A       [8]    _PWM1_Init
0x0032      [80]    _Mul_16x16_U
0x0082      [54]    _ADC_Read
0x00B8      [42]    _init
0x00E2      [16]    ___CC2DW
0x00F2     [108]    _PWM1_Set_Duty
0x015E      [82]    _Mul_32x32_U
0x01B0    [1568]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    _D
0x0017       [6]    _sweep_target
0x001D       [3]    _sweep_duty_cycle
0x0020       [1]    _D_max_fast_gmppt
0x0021       [4]    _P_max_fast_gmppt
0x0025       [6]    _sweep_upper_bounds
0x002B       [4]    _measured_power
0x002F       [2]    _current_in
0x0031       [1]    _mode
0x0032       [6]    _sweep_lower_bounds
0x0038       [1]    _sweep_iteration
0x0039       [2]    _last_voltage_in
0x003B       [4]    _delta_power
0x003F       [1]    _D_max_adaptive
0x0040       [2]    _delta_voltage
0x0042       [1]    _oscillation_detect
0x0043       [1]    _D_step
0x0044       [4]    _P_max_adaptive
0x0048       [2]    _last_voltage_out
0x004A       [2]    _last_current_in
0x004C       [4]    _last_measured_power
0x0050       [1]    _speed_coeff
0x0051       [4]    _last_delta_power
0x0055       [2]    _voltage_out
0x0057       [1]    _settled
0x0058       [1]    _counter
0x0059       [2]    _voltage_in
0x005B       [1]    FARG_ADC_Read_channel
0x005B       [1]    FARG_PWM1_Set_Duty_new_duty
0x005C       [4]    FARG_PWM1_Init_PWM_Freq
0x0F80       [1]    PORTA
0x0F80       [0]    RA7_bit
0x0F80       [0]    RA6_bit
0x0F80       [0]    RA2_bit
0x0F80       [0]    RA1_bit
0x0F80       [0]    RA0_bit
0x0F80       [0]    RA5_bit
0x0F80       [0]    RA4_bit
0x0F80       [0]    RA3_bit
0x0F81       [0]    RB1_bit
0x0F81       [0]    RB2_bit
0x0F81       [1]    PORTB
0x0F81       [0]    RB0_bit
0x0F81       [0]    RB3_bit
0x0F81       [0]    RB6_bit
0x0F81       [0]    RB5_bit
0x0F81       [0]    RB7_bit
0x0F81       [0]    RB4_bit
0x0F89       [0]    LATA1_bit
0x0F89       [0]    LATA3_bit
0x0F89       [0]    LATA6_bit
0x0F89       [1]    LATA
0x0F89       [0]    LATA2_bit
0x0F89       [0]    LATA4_bit
0x0F89       [0]    LATA7_bit
0x0F89       [0]    LATA0_bit
0x0F8A       [0]    LATB7_bit
0x0F8A       [0]    LATB1_bit
0x0F8A       [0]    LATB2_bit
0x0F8A       [1]    LATB
0x0F8A       [0]    LATB6_bit
0x0F8A       [0]    LATB0_bit
0x0F8A       [0]    LATB4_bit
0x0F8A       [0]    LATB3_bit
0x0F8A       [0]    LATB5_bit
0x0F92       [0]    TRISA1_bit
0x0F92       [0]    TRISA6_bit
0x0F92       [0]    TRISA7_bit
0x0F92       [0]    TRISA2_bit
0x0F92       [0]    TRISA3_bit
0x0F92       [0]    TRISA4_bit
0x0F92       [1]    TRISA
0x0F92       [0]    TRISA0_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB6_bit
0x0F93       [1]    TRISB
0x0F93       [0]    TRISB7_bit
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB2_bit
0x0F9B       [1]    OSCTUNE
0x0F9B       [0]    TUN2_bit
0x0F9B       [0]    TUN1_bit
0x0F9B       [0]    TUN0_bit
0x0F9B       [0]    TUN5_bit
0x0F9B       [0]    TUN4_bit
0x0F9B       [0]    TUN3_bit
0x0F9D       [0]    CCP1IE_bit
0x0F9D       [0]    TMR2IE_bit
0x0F9D       [0]    TMR1IE_bit
0x0F9D       [0]    ADIE_bit
0x0F9D       [0]    RCIE_bit
0x0F9D       [0]    TXIE_bit
0x0F9D       [1]    PIE1
0x0F9E       [0]    TMR2IF_bit
0x0F9E       [0]    TMR1IF_bit
0x0F9E       [1]    PIR1
0x0F9E       [0]    RCIF_bit
0x0F9E       [0]    ADIF_bit
0x0F9E       [0]    CCP1IF_bit
0x0F9E       [0]    TXIF_bit
0x0F9F       [0]    CCP1IP_bit
0x0F9F       [0]    ADIP_bit
0x0F9F       [1]    IPR1
0x0F9F       [0]    TMR2IP_bit
0x0F9F       [0]    TMR1IP_bit
0x0F9F       [0]    RCIP_bit
0x0F9F       [0]    TXIP_bit
0x0FA0       [1]    PIE2
0x0FA0       [0]    EEIE_bit
0x0FA0       [0]    TMR3IE_bit
0x0FA0       [0]    LVDIE_bit
0x0FA0       [0]    OSCFIE_bit
0x0FA1       [1]    PIR2
0x0FA1       [0]    EEIF_bit
0x0FA1       [0]    OSCFIF_bit
0x0FA1       [0]    TMR3IF_bit
0x0FA1       [0]    LVDIF_bit
0x0FA2       [0]    OSCFIP_bit
0x0FA2       [1]    IPR2
0x0FA2       [0]    LVDIP_bit
0x0FA2       [0]    TMR3IP_bit
0x0FA2       [0]    EEIP_bit
0x0FA6       [1]    EECON1
0x0FA6       [0]    CFGS_bit
0x0FA6       [0]    EEPGD_bit
0x0FA6       [0]    RD_bit
0x0FA6       [0]    WR_bit
0x0FA6       [0]    WREN_bit
0x0FA6       [0]    FREE_bit
0x0FA6       [0]    WRERR_bit
0x0FA7       [1]    EECON2
0x0FA8       [1]    EEDATA
0x0FA9       [1]    EEADR
0x0FAA       [1]    BAUDCTL
0x0FAA       [0]    SCKP_bit
0x0FAA       [0]    WUE_bit
0x0FAA       [0]    BRG16_bit
0x0FAA       [0]    RCIDL_bit
0x0FAA       [0]    ABDEN_bit
0x0FAB       [0]    FERR_bit
0x0FAB       [0]    ADDEN_bit
0x0FAB       [1]    RCSTA
0x0FAB       [0]    CREN_bit
0x0FAB       [0]    RX9D_bit
0x0FAB       [0]    OERR_bit
0x0FAB       [0]    SPEN_bit
0x0FAB       [0]    SREN_bit
0x0FAB       [0]    RX9_bit
0x0FAC       [0]    TX9_bit
0x0FAC       [0]    TXEN_bit
0x0FAC       [1]    TXSTA
0x0FAC       [0]    CSRC_bit
0x0FAC       [0]    SYNC_bit
0x0FAC       [0]    TRMT_bit
0x0FAC       [0]    TX9D_bit
0x0FAC       [0]    SENDB_bit
0x0FAC       [0]    BRGH_bit
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB1       [0]    RD16_T3CON_bit
0x0FB1       [1]    T3CON
0x0FB1       [0]    T3CCP2_bit
0x0FB1       [0]    T3SYNC_bit
0x0FB1       [0]    NOT_T3SYNC_bit
0x0FB1       [0]    TMR3ON_bit
0x0FB1       [0]    TMR3CS_bit
0x0FB1       [0]    T3CCP1_bit
0x0FB1       [0]    T3CKPS1_bit
0x0FB1       [0]    T3CKPS0_bit
0x0FB2       [1]    TMR3L
0x0FB3       [1]    TMR3H
0x0FB6       [0]    PSSBD1_bit
0x0FB6       [0]    PSSAC0_bit
0x0FB6       [1]    ECCPAS
0x0FB6       [0]    PSSBD0_bit
0x0FB6       [0]    ECCPASE_bit
0x0FB6       [0]    ECCPAS2_bit
0x0FB6       [0]    ECCPAS0_bit
0x0FB6       [0]    ECCPAS1_bit
0x0FB6       [0]    PSSAC1_bit
0x0FB7       [1]    PWM1CON
0x0FB7       [0]    PDC4_bit
0x0FB7       [0]    PDC5_bit
0x0FB7       [0]    PRSEN_bit
0x0FB7       [0]    PDC6_bit
0x0FB7       [0]    PDC2_bit
0x0FB7       [0]    PDC1_bit
0x0FB7       [0]    PDC0_bit
0x0FB7       [0]    PDC3_bit
0x0FBD       [0]    DC1B1_bit
0x0FBD       [0]    DC1B0_bit
0x0FBD       [0]    P1M0_bit
0x0FBD       [1]    CCP1CON
0x0FBD       [0]    P1M1_bit
0x0FBD       [0]    CCP1M1_bit
0x0FBD       [0]    CCP1M0_bit
0x0FBD       [0]    CCP1M3_bit
0x0FBD       [0]    CCP1M2_bit
0x0FBE       [1]    CCPR1L
0x0FBE       [2]    CCPR1
0x0FBF       [1]    CCPR1H
0x0FC0       [0]    ADFM_bit
0x0FC0       [1]    ADCON2
0x0FC0       [0]    ACQT2_bit
0x0FC0       [0]    ADCS2_bit
0x0FC0       [0]    ADCS1_bit
0x0FC0       [0]    ADCS0_bit
0x0FC0       [0]    ACQT1_bit
0x0FC0       [0]    ACQT0_bit
0x0FC1       [0]    PCFG6_bit
0x0FC1       [1]    ADCON1
0x0FC1       [0]    PCFG2_bit
0x0FC1       [0]    PCFG1_bit
0x0FC1       [0]    PCFG0_bit
0x0FC1       [0]    PCFG5_bit
0x0FC1       [0]    PCFG4_bit
0x0FC1       [0]    PCFG3_bit
0x0FC2       [0]    VCFG0_bit
0x0FC2       [0]    VCFG1_bit
0x0FC2       [1]    ADCON0
0x0FC2       [0]    DONE_bit
0x0FC2       [0]    NOT_DONE_bit
0x0FC2       [0]    ADON_bit
0x0FC2       [0]    GO_DONE_bit
0x0FC2       [0]    GO_bit
0x0FC2       [0]    CHS1_bit
0x0FC2       [0]    CHS2_bit
0x0FC2       [0]    CHS0_bit
0x0FC3       [2]    ADRES
0x0FC3       [1]    ADRESL
0x0FC4       [1]    ADRESH
0x0FCA       [0]    TOUTPS0_bit
0x0FCA       [0]    TOUTPS1_bit
0x0FCA       [0]    TMR2ON_bit
0x0FCA       [0]    T2CKPS0_bit
0x0FCA       [0]    T2CKPS1_bit
0x0FCA       [1]    T2CON
0x0FCA       [0]    TOUTPS3_bit
0x0FCA       [0]    TOUTPS2_bit
0x0FCB       [1]    PR2
0x0FCC       [1]    TMR2
0x0FCD       [1]    T1CON
0x0FCD       [0]    T1SYNC_bit
0x0FCD       [0]    NOT_T1SYNC_bit
0x0FCD       [0]    TMR1ON_bit
0x0FCD       [0]    TMR1CS_bit
0x0FCD       [0]    T1OSCEN_bit
0x0FCD       [0]    T1RUN_bit
0x0FCD       [0]    RD16_bit
0x0FCD       [0]    T1CKPS0_bit
0x0FCD       [0]    T1CKPS1_bit
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD0       [1]    RCON
0x0FD0       [0]    PD_bit
0x0FD0       [0]    NOT_PD_bit
0x0FD0       [0]    TO__bit
0x0FD0       [0]    NOT_POR_bit
0x0FD0       [0]    BOR_bit
0x0FD0       [0]    NOT_BOR_bit
0x0FD0       [0]    POR_bit
0x0FD0       [0]    NOT_RI_bit
0x0FD0       [0]    IPEN_bit
0x0FD0       [0]    NOT_TO_bit
0x0FD0       [0]    RI_bit
0x0FD1       [1]    WDTCON
0x0FD1       [0]    SWDTEN_bit
0x0FD2       [1]    LVDCON
0x0FD2       [0]    LVDL3_bit
0x0FD2       [0]    LVDEN_bit
0x0FD2       [0]    IRVST_bit
0x0FD2       [0]    LVDL2_bit
0x0FD2       [0]    LVDL0_bit
0x0FD2       [0]    LVDL1_bit
0x0FD3       [1]    OSCCON
0x0FD3       [0]    SCS0_bit
0x0FD3       [0]    IRCF1_bit
0x0FD3       [0]    IRCF2_bit
0x0FD3       [0]    IDLEN_bit
0x0FD3       [0]    IRCF0_bit
0x0FD3       [0]    SCS1_bit
0x0FD3       [0]    IOFS_bit
0x0FD3       [0]    OSTS_bit
0x0FD5       [1]    T0CON
0x0FD5       [0]    T0SE_bit
0x0FD5       [0]    PSA_bit
0x0FD5       [0]    T0CS_bit
0x0FD5       [0]    TMR0ON_bit
0x0FD5       [0]    T08BIT_bit
0x0FD5       [0]    T0PS2_bit
0x0FD5       [0]    T0PS0_bit
0x0FD5       [0]    T0PS1_bit
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [0]    Z_bit
0x0FD8       [0]    OV_bit
0x0FD8       [0]    N_bit
0x0FD8       [1]    STATUS
0x0FD8       [0]    C_bit
0x0FD8       [0]    DC_bit
0x0FD9       [2]    FSR2
0x0FD9       [1]    FSR2L
0x0FD9       [2]    FSR2PTR
0x0FDA       [1]    FSR2H
0x0FDB       [1]    PLUSW2
0x0FDC       [1]    PREINC2
0x0FDD       [1]    POSTDEC2
0x0FDE       [1]    POSTINC2
0x0FDF       [1]    INDF2
0x0FE0       [1]    BSR
0x0FE1       [2]    FSR1PTR
0x0FE1       [1]    FSR1L
0x0FE1       [2]    FSR1
0x0FE2       [1]    FSR1H
0x0FE3       [1]    PLUSW1
0x0FE4       [1]    PREINC1
0x0FE5       [1]    POSTDEC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [2]    FSR0PTR
0x0FE9       [2]    FSR0
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEB       [1]    PLUSW0
0x0FEC       [1]    PREINC0
0x0FED       [1]    POSTDEC0
0x0FEE       [1]    POSTINC0
0x0FEF       [1]    INDF0
0x0FF0       [0]    INT2IE_bit
0x0FF0       [0]    INT2IF_bit
0x0FF0       [0]    INT1IE_bit
0x0FF0       [0]    INT1IP_bit
0x0FF0       [0]    INT1IF_bit
0x0FF0       [1]    INTCON3
0x0FF0       [0]    INT2IP_bit
0x0FF1       [0]    T0IP_bit
0x0FF1       [0]    TMR0IP_bit
0x0FF1       [0]    INTEDG2_bit
0x0FF1       [0]    INTEDG1_bit
0x0FF1       [0]    RBIP_bit
0x0FF1       [1]    INTCON2
0x0FF1       [0]    NOT_RBPU_bit
0x0FF1       [0]    INTEDG0_bit
0x0FF1       [0]    RBPU_bit
0x0FF2       [0]    GIEL_bit
0x0FF2       [0]    INT0IE_bit
0x0FF2       [0]    TMR0IE_bit
0x0FF2       [0]    PEIE_bit
0x0FF2       [0]    GIE_bit
0x0FF2       [1]    INTCON
0x0FF2       [0]    GIEH_bit
0x0FF2       [0]    RBIE_bit
0x0FF2       [0]    INT0IF_bit
0x0FF2       [0]    RBIF_bit
0x0FF2       [0]    TMR0IF_bit
0x0FF3       [1]    PRODL
0x0FF3       [2]    PROD
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF6       [3]    TBLPTR
0x0FF7       [1]    TBLPTRH
0x0FF8       [0]    TBLPTRU0_bit
0x0FF8       [1]    TBLPTRU
0x0FF8       [0]    ACSS_bit
0x0FF8       [0]    TBLPTRU1_bit
0x0FF8       [0]    TBLPTRU3_bit
0x0FF8       [0]    TBLPTRU4_bit
0x0FF8       [0]    TBLPTRU2_bit
0x0FF9       [1]    PCL
0x0FFA       [1]    PCLATH
0x0FFB       [1]    PCLATU
0x0FFB       [0]    PCU1_bit
0x0FFB       [0]    PCU0_bit
0x0FFB       [0]    PCU2_bit
0x0FFB       [0]    PCU4_bit
0x0FFB       [0]    PCU3_bit
0x0FFC       [0]    STKFUL_bit
0x0FFC       [0]    SP2_bit
0x0FFC       [0]    STKUNF_bit
0x0FFC       [0]    SP3_bit
0x0FFC       [0]    SP4_bit
0x0FFC       [0]    SP1_bit
0x0FFC       [1]    STKPTR
0x0FFC       [0]    SP0_bit
0x0FFD       [1]    TOSL
0x0FFE       [1]    TOSH
0x0FFF       [1]    TOSU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x07D0       [2]    ?ICS_D
0x07D2       [6]    ?ICS_sweep_target
0x07D8       [3]    ?ICS_sweep_duty_cycle
0x07DB       [1]    ?ICS_D_max_fast_gmppt
0x07DC       [4]    ?ICS_P_max_fast_gmppt
0x07E0       [6]    ?ICS_sweep_upper_bounds
0x07E6       [4]    ?ICS_measured_power
0x07EA       [2]    ?ICS_current_in
0x07EC       [1]    ?ICS_mode
0x07ED       [6]    ?ICS_sweep_lower_bounds
0x07F3       [1]    ?ICS_sweep_iteration
0x07F4       [2]    ?ICS_last_voltage_in
0x07F6       [4]    ?ICS_delta_power
0x07FA       [1]    ?ICS_D_max_adaptive
0x07FB       [2]    ?ICS_delta_voltage
0x07FD       [1]    ?ICS_oscillation_detect
0x07FE       [1]    ?ICS_D_step
0x07FF       [4]    ?ICS_P_max_adaptive
0x0803       [2]    ?ICS_last_voltage_out
0x0805       [2]    ?ICS_last_current_in
0x0807       [4]    ?ICS_last_measured_power
0x080B       [1]    ?ICS_speed_coeff
0x080C       [4]    ?ICS_last_delta_power
0x0810       [2]    ?ICS_voltage_out
0x0812       [1]    ?ICS_settled
0x0813       [1]    ?ICS_counter
0x0814       [2]    ?ICS_voltage_in
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  L_main59
  L_main60
  L__main61
  L__main62
  L__main63
  L__main64
  L__main65
  L__main66
  L__main67
  L__main68
  L__main69
  L__main70
  L__main71
  _main
  L__main72
  L__main73
  L__main74
  L__main75
  L__main76
  L__main77
  L__main78
  L__main79
  L__main80
  L__main81
  L__main82
  L__main83
  L__main84
  L__main85
  L__main86
  L__main87
  L__main88
  L__main89
  L__main90
  L__main91
  L__main92
  L__main93
  L__main94
  L__main95
  L__main96
  L__main97
  L__main98
  _interrupt
  L__interrupt99
  _init
  L_ADC_Read0
  L_ADC_Read1
  _ADC_Read
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_8ms6
  L_Delay_100ms7
  L_Delay_10ms8
  L_Delay_1sec9
  L____Boot_Delay4k10
  L____Boot_Delay8k11
  L____Boot_Delay12k12
  L____Boot_Delay16k13
  L____Boot_Delay24k14
  L____Boot_Delay32k15
  L____Boot_Delay48k16
  L____Boot_Delay64k17
  L____Boot_Delay128k18
  L_Delay_Cyc19
  L_Delay_Cyc20
  L_VDelay_ms21
  L_VDelay_ms22
  L_VDelay_ms23
  L_VDelay_Advanced_ms24
  L_VDelay_Advanced_ms25
  L_VDelay_Advanced_ms26
  _Get_Fosc_kHz
  _Delay_1us
  _Delay_10us
  _Delay_22us
  _Delay_50us
  _Delay_80us
  _Delay_500us
  _Delay_5500us
  _Delay_8ms
  _Delay_100ms
  _Delay_10ms
  _Delay_1sec
  ____Boot_Delay4k
  ____Boot_Delay8k
  ____Boot_Delay12k
  ____Boot_Delay16k
  ____Boot_Delay24k
  ____Boot_Delay32k
  ____Boot_Delay48k
  ____Boot_Delay64k
  ____Boot_Delay128k
  _Delay_Cyc
  _VDelay_ms
  L__VDelay_ms27
  L__VDelay_ms28
  L__VDelay_ms29
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms30
  L__VDelay_Advanced_ms31
  L__VDelay_Advanced_ms32
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  _Div_8x8_U
  _Div_16x16_U
  _Div_16x16_S_L
  _Div_16x16_S
  _Div_8x8_S
  _Mul_8x8_S
  _Mul_16x16_U
  _Mul_16x16_S
  _SDIV3232L
  _COMFREM
  _Div_32x32_S
  _Div_32x32_U
  _Mul_32x32_U
  _Mul_32x32_S
  _PWM1_Init
  _PWM1_Set_Duty
  L__PWM1_Set_Duty0
  L__PWM1_Set_Duty1
  L__PWM1_Set_Duty2
  L__PWM1_Set_Duty3
  _PWM1_Start
  _PWM1_Stop
  _CC2D_Loop1
  _CC2DL_Loop1
  L_longjmp2
  ___CC2D
  ___CC2DW
  _____DoIFC
  _Swap
  _setjmp
  _longjmp
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  L_main59
  L_main60
  L__main61
  L__main62
  L__main63
  L__main64
  L__main65
  L__main66
  L__main67
  L__main68
  L__main69
  L__main70
  L__main71
  _main
  L__main72
  L__main73
  L__main74
  L__main75
  L__main76
  L__main77
  L__main78
  L__main79
  L__main80
  L__main81
  L__main82
  L__main83
  L__main84
  L__main85
  L__main86
  L__main87
  L__main88
  L__main89
  L__main90
  L__main91
  L__main92
  L__main93
  L__main94
  L__main95
  L__main96
  L__main97
  L__main98
  _interrupt
  L__interrupt99
  _init
